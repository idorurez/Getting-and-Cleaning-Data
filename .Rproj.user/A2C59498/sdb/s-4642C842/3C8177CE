{
    "contents" : "run_analysis <- function () {\n  \n  library(data.table)\n  library(dplyr)\n  library(plyr)\n  \n  # various paths and filenames\n  dir <- \"data\"\n  \n  dir_test <- paste(dir, \"/\", \"test\", sep=\"\")\n  dir_train <- paste(dir, \"/\", \"train\", sep=\"\")\n  \n  fileName_exercise_labels <- \"activity_labels.txt\"\n  fileName_features <- \"features.txt\"\n\n  fileName_train_set <- \"X_train.txt\"\n  fileName_train_labels <- \"y_train.txt\"\n  \n  fileName_test_set <- \"X_test.txt\"\n  fileName_test_labels <- \"y_test.txt\"\n  \n  fileName_subjects_train <- \"subject_train.txt\"\n  fileName_subjects_test <- \"subject_test.txt\"\n  \n  file_exercise_labels <- paste(dir,\"/\", fileName_exercise_labels, sep=\"\")\n  \n  # read in list of exercises and assign them their corresponding index values\n  labels <- read.table(file_exercise_labels, stringsAsFactors=FALSE, col.names=c(\"id\", \"exercise\"))\n  labels <- labels$exercise\n  \n  # build the paths\n  file_features <- paste(dir, \"/\", fileName_features, sep=\"\")\n  \n  file_train_subjects <- paste(dir_train, \"/\", fileName_subjects_train, sep=\"\")\n  file_train_set <- paste(dir_train, \"/\", fileName_train_set, sep=\"\")\n  file_train_labels <- paste(dir_train, \"/\", fileName_train_labels, sep=\"\")\n  \n  file_test_subjects <- paste(dir_test, \"/\", fileName_subjects_test, sep=\"\")\n  file_test_set <- paste(dir_test, \"/\", fileName_test_set, sep=\"\")\n  file_test_labels <- paste(dir_test, \"/\", fileName_test_labels, sep=\"\")\n  \n  # read in features\n  features <- fread(file_features, col.names = c(\"id\", \"features\"))\n  \n  # grep match string\n  extractString <- \"mean|std\"\n  \n  # read in data for test group\n  dt_test_subjects <- read.table(file_test_subjects, col.names = \"subject_id\")\n  dt_test_set <- read.table(file_test_set, col.names = features[,features])\n  dt_test_exercises <- fread(file_test_labels, col.names = \"exercise\")\n  \n  # read in data for train group\n  dt_train_subjects <- read.table(file_train_subjects, col.names = \"subject_id\")\n  dt_train_set <- read.table(file_train_set, col.names = features[,features])\n  dt_train_exercises <- fread(file_train_labels, col.names = \"exercise\")\n  \n  # rename exercises to proper naming based on given activities list \n  dt_train_exercises[,exercise:=labels[exercise]]\n  dt_test_exercises[,exercise:=labels[exercise]]\n  \n  #convert to data frame for usage downstream\n  dt_train_exercises <- as.data.frame(dt_train_exercises)\n  dt_test_exercises <- as.data.frame(dt_test_exercises)\n  \n  # convert strings to factors, so group_by can handle them\n  dt_train_exercises$exercise <- as.factor(dt_train_exercises$exercise)\n  dt_test_exercises$exercise <- as.factor(dt_test_exercises$exercise)\n  \n  #this is another way to cull out what we need, instead of using the plyr package\n  #dt_train_set <- dt_train_set[,grep(extractString, names(dt_train_set))]\n  #dt_test_set <- dt_test_set[,grep(extractString, names(dt_test_set))]\n  \n  # cull out\n  dt_train_set <- select(dt_train_set, grep(extractString, names(dt_train_set)))\n  dt_test_set <- select(dt_test_set, grep(extractString, names(dt_test_set)))\n  \n  \n  train_rows <- seq(1:nrow(dt_train_subjects))\n  test_rows <- seq(1:nrow(dt_test_subjects))\n  \n  # add row id\n  dt_test_subjects$id <- test_rows\n  dt_test_set$id <- test_rows\n  dt_test_exercises$id <- test_rows\n  \n  # add row id\n  dt_train_subjects$id <- train_rows\n  dt_train_set$id <- train_rows\n  dt_train_exercises$id <- train_rows\n  \n  # list of all of the data frmes we want to merge\n  train_list <- list(dt_train_subjects, dt_train_exercises, dt_train_set)\n  test_list <- list(dt_test_subjects, dt_test_exercises, dt_test_set)\n  \n  # merge all \n  dt_train_data <- join_all(train_list, by=\"id\")\n  dt_test_data <-  join_all(test_list, by=\"id\")\n  prelim_data <- rbind(dt_train_data,dt_test_data)\n  \n  # drop id and we have our semi-raw data\n  prelim_data$id <- NULL\n  \n  # now group by person, exercise, and then the mean and return\n\n  tidy_data <- prelim_data %>% group_by(subject_id, exercise) %>% summarize_each(funs(mean))\n\n  write.table(tidy_data, file=\"tidy_data.txt\", row.name=FALSE)\n  \n  return(tidy_data) \n \n}",
    "created" : 1447911692940.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2282974444",
    "id" : "3C8177CE",
    "lastKnownWriteTime" : 1448059812,
    "path" : "D:/dev/datasciencecoursera/Getting and Cleaning Data/run_analysis.R",
    "project_path" : "run_analysis.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : true,
    "type" : "r_source"
}